name: CI

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * 0'

env:
  DEFAULT_PYTHON: '3.11'

jobs:
  information:
    name: Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      architectures: ${{ steps.information.outputs.architectures }}
      build: ${{ steps.information.outputs.build }}
      description: ${{ steps.information.outputs.description }}
      name: ${{ steps.information.outputs.name }}
      slug: ${{ steps.information.outputs.slug }}
      target: ${{ steps.information.outputs.target }}
      version: ${{ steps.information.outputs.version }}
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4
      - name: üöÄ Run add-on information action
        id: information
        uses: frenck/action-addon-information@v1.4.2
        with:
          path: './rustdesk'

  build:
    name: Build ${{ matrix.architecture }}
    runs-on: ubuntu-latest
    needs: information
    strategy:
      matrix:
        architecture: ${{ fromJson(needs.information.outputs.architectures) }}
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4
      - name: üèó Set up build cache
        id: cache
        uses: actions/cache@v3.3.2
        with:
          path: /tmp/.docker-cache
          key: docker-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: |
            docker-${{ matrix.architecture }}
      - name: üèó Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: üèó Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: ‚ÑπÔ∏è Compose build flags
        id: flags
        run: |
          echo "date=$(date +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT
          from=$(jq --raw-output ".build_from.${{ matrix.architecture }}" "${{ needs.information.outputs.build }}")
          echo "from=${from}" >> $GITHUB_OUTPUT

          if [[ "${{ matrix.architecture}}" = "amd64" ]]; then
            echo "platform=linux/amd64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.architecture }}" = "i386" ]]; then
            echo "platform=linux/386" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.architecture }}" = "armhf" ]]; then
            echo "platform=linux/arm/v6" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.architecture }}" = "armv7" ]]; then
            echo "platform=linux/arm/v7" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.architecture }}" = "aarch64" ]]; then
            echo "platform=linux/arm64/v8" >> $GITHUB_OUTPUT
          else
            echo "::error ::Could not determine platform for architecture ${{ matrix.architecture }}"
            exit 1
          fi
      - name: üèó Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: üöÄ Build
        uses: docker/build-push-action@v5.1.0
        with:
          build-args: |
            BUILD_ARCH=${{ matrix.architecture }}
            BUILD_DATE=${{ steps.flags.outputs.date }}
            BUILD_DESCRIPTION=${{ needs.information.outputs.description }}
            BUILD_FROM=${{ steps.flags.outputs.from }}
            BUILD_NAME=${{ needs.information.outputs.name }}
            BUILD_REF=${{ github.sha }}
            BUILD_REPOSITORY=${{ github.repository }}
            BUILD_VERSION=${{ needs.information.outputs.version }}
          context: rustdesk
          file: rustdesk/Dockerfile
          platforms: ${{ steps.flags.outputs.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.architecture }}-addon-rustdesk:${{ needs.information.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.architecture }}-addon-rustdesk:latest
          cache-from: |
            type=local,src=/tmp/.docker-cache
            ghcr.io/${{ github.repository_owner }}/${{ matrix.architecture }}-addon-rustdesk:buildcache
          cache-to: |
            type=local,dest=/tmp/.docker-cache-new,mode=max
            ghcr.io/${{ github.repository_owner }}/${{ matrix.architecture }}-addon-rustdesk:buildcache
      - name: üöö Swap build cache
        run: |
          rm -rf /tmp/.docker-cache
          mv /tmp/.docker-cache-new /tmp/.docker-cache
